// Test complex nested play pattern
// play((1, 2), (3, (4, 3, 2)), 1) means:
// - (1, 2) splits first 1/3 into 2 parts
// - (3, (4, 3, 2)) splits second 1/3 into 2 parts, with second part subdivided into 3
// - 1 gets the final 1/3

var global = init GLOBAL
global.tempo(120)
global.beat(4 by 4)

var arp = init global.seq
arp.beat(4 by 4).length(4)
arp.audio("../../test-assets/audio/arpeggio_c.wav").chop(4)
arp.play((1, 2), (3, (4, 3, 2)), 1)

var kick = init global.seq
kick.beat(4 by 4).length(4)
kick.audio("../../test-assets/audio/kick.wav")
kick.play(1, 1, 1)

// Start
global.run()
