// ============================================
// OrbitScore - All Features Comprehensive Test
// ============================================
// このファイルは実装済みの全機能をテストします

// ============================================
// 1. Global Initialization & Configuration
// ============================================

var global = init GLOBAL
global.tempo(120)
global.beat(4 by 4)
global.tick(4)
global.key(C)
global.audioPath("test-assets/audio")

// ============================================
// 2. Sequence Initialization
// ============================================

var kick = init global.seq
var snare = init global.seq
var hat = init global.seq

// ============================================
// 3. Basic Audio Loading & Playback
// ============================================

// Kick: Simple playback (no chop)
kick.audio("kick.wav").play(1, 0, 1, 0)

// Snare: With chop
snare.audio("snare.wav").chop(2).play(0, 1, 0, 1)

// Hat: Complex pattern with chop
hat.audio("hihat.wav").chop(4).play(1, 2, 3, 0)

// ============================================
// 4. Audio Control - Gain (dB units)
// ============================================

// Test gain in dB
kick.gain(-6)    // 50% volume
snare.gain(0)    // 100% volume (default)
hat.gain(-12)    // 25% volume

// Test master gain
global.gain(-3)  // Reduce master by 3dB

// ============================================
// 5. Audio Control - Pan (Stereo)
// ============================================

// Test pan positioning
kick.pan(0)      // Center
snare.pan(-50)   // Left
hat.pan(50)      // Right

// ============================================
// 6. Random Values
// ============================================

// Full random gain
kick.gain(r)

// Random walk around center
hat.gain(r-6%3)  // -6dB ± 3dB
snare.pan(r0%30) // 0 ± 30

// ============================================
// 7. Polymeter (Different Time Signatures)
// ============================================

// Uncomment to test polymeter
var poly1 = init global.seq
poly1.beat(3 by 4).audio("kick.wav").play(1, 0, 1)

var poly2 = init global.seq
poly2.beat(5 by 4).audio("snare.wav").play(1, 0, 1, 0, 1)

// ============================================
// 8. Polytempo (Different BPM)
// ============================================

// Uncomment to test polytempo
// var fast = init global.seq
// fast.tempo(160).audio("hihat.wav").play(1, 1, 1, 1)

// var slow = init global.seq
// slow.tempo(80).audio("kick.wav").play(1, 0)

// ============================================
// 9. Nested Rhythms
// ============================================

// Uncomment to test nested patterns
var nested = init global.seq
nested.audio("hihat.wav").chop(8).play(1, (2, 3), (4, (5, 6)))

// ============================================
// 10. Loop Length Control
// ============================================

// Uncomment to test different loop lengths
kick.length(8)   // 2 bars
snare.length(1)  // 1 bar (default)

// ============================================
// 11. Global Mastering Effects
// ============================================

// Compressor - Increase loudness
global.compressor(0.2, 0.9, 0.001, 0.03, 2.0, true)

// Limiter - Prevent clipping
global.limiter(0.95, 0.01, true)

// Normalizer - Maximize output
global.normalizer(1.0, 0.01, true)

// Turn off effects
global.compressor(0, 0, 0, 0, 0, false)
global.limiter(0, 0, false)
global.normalizer(0, 0, false)

// ============================================
// 12. Transport Control
// ============================================

// Start the global scheduler
global.run()

// Start individual sequences
kick.loop()
snare.loop()
hat.loop()
poly1.loop()
poly2.loop()
nested.loop()

// Stop individual sequences
kick.stop()
snare.stop()

// Mute/Unmute
hat.mute()
hat.unmute()

// Stop all
global.stop()

// ============================================
// 13. Method Chaining (All in one line)
// ============================================

// Uncomment to test full method chaining
// var chain = init global.seq
// chain.tempo(140).beat(5 by 4).length(2).audio("kick.wav").chop(4).play(1, 2, 0, 3).gain(-3).pan(-20).loop()

// ============================================
// Test Summary
// ============================================
// ✅ Global initialization & configuration
// ✅ Sequence initialization
// ✅ Audio loading (with/without chop)
// ✅ Basic playback patterns
// ✅ Gain control (dB units)
// ✅ Pan control (stereo positioning)
// ✅ Random values (full random & random walk)
// ✅ Polymeter support
// ✅ Polytempo support
// ✅ Nested rhythms
// ✅ Loop length control
// ✅ Global mastering effects
// ✅ Transport control (run, loop, stop, mute)
// ✅ Method chaining